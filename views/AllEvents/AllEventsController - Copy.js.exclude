angular.module('MetronicApp').controller('AllEventsController', function ($rootScope, $log, $scope,
    settings, $http, $timeout, $uibModal, $location, $translate, $translatePartialLoader, $compile, uiCalendarConfig, $filter, AllEventsService) {

    //set language
    $translatePartialLoader.addPart('AllEvents');
    $translate.refresh();
    $scope.ParticipantList;
    $scope.EventList;
    $scope.ClaimDetails = JSON.parse(sessionStorage.getItem("ClaimObj"));
    //---------------------------------Start Calendar------------------------//
    var date = new Date();
    var d = date.getDate();
    var m = date.getMonth();
    var y = date.getFullYear();
    $scope.changeTo = 'English';
   
    /* event source that contains custom events on the scope */
    $scope.events = [];
   
    function init() {
        GetEventList();
        GetParticipantList();
    }
    init();
    //Binding each claim event to calendar
    $scope.GetEventList = GetEventList;
    function GetEventList() {
        var paramClaimId = { "id": $scope.ClaimDetails.ClaimId }
        var EventListPromise = AllEventsService.GetEventList(paramClaimId);
        EventListPromise.then(function (success) {
            $scope.EventList = [];
            $scope.EventList = success.data.data;

            angular.forEach($scope.EventList, function (event) {
                $scope.events.push({
                    Event: event, id: event.id, title: event.title, start: new Date($filter('DateFormatyyyyMMddHHmmTime')(event.startTiming)),
                    end: new Date($filter('DateFormatyyyyMMddHHmmTime')(event.endTiming)), className: ['openSesame'],stick : true
                });
            });
        }, function (error) { $scope.ErrorMessage = error.data.errorMessage; })

    };

    $scope.GetParticipantList = GetParticipantList;
    function GetParticipantList() {
        var param = { "claimNumber": $scope.ClaimDetails.ClaimNumber }
        var GetParticipants = AllEventsService.GetParticipants(param);
        GetParticipants.then(function (success) {
            $scope.ParticipantList = success.data.data;
        }, function (error) { $scope.ErrorMessage = error.data.errorMessage; })

    };
    /* event source that calls a function on every view switch */
    $scope.eventsF = function (start, end, timezone, callback) {
        var s = new Date(start).getTime() / 1000;
        var e = new Date(end).getTime() / 1000;
        var m = new Date(start).getMonth();
        // var events = [{ title: 'Feed Me ' + m, start: s + (50000), end: s + (100000), allDay: false, className: ['customFeed'] }];     
        callback(events);
    };

  
    /* alert on eventClick */
    $scope.alertOnEventClick = function (date, jsEvent, view) {
        $scope.EventObj = date.Event;
        var obj = {
            "claimId": $scope.ClaimDetails.ClaimId,
            "ParticipantList": $scope.ParticipantList,
            "event": angular.copy(date.Event)
        };
        $scope.animationsEnabled = true;
        var paramCompanyId = {
            "companyId": sessionStorage.getItem("CompanyId")
        };
        var out = $uibModal.open(
        {
            animation: $scope.animationsEnabled,
            templateUrl: "views/Adjuster/EventDetails.html",
            controller: "EventDetailsController",
            resolve:
            {
                objClaim: function () {
                    objClaim = obj;
                    return objClaim;
                }
            }

        });
        out.result.then(function (value) {
            //Call Back Function success
            if (value === "Success") {

                $scope.GetEventList();
            }

        }, function (res) {
            //Call Back Function close
        });
        return {
            open: open
        };
    };
    /* alert on Drop */
    $scope.alertOnDrop = function (event, delta, revertFunc, jsEvent, ui, view) {
        $scope.alertMessage = ('Event Dropped to make dayDelta ' + delta);
    };
    /* alert on Resize */
    $scope.alertOnResize = function (event, delta, revertFunc, jsEvent, ui, view) {
        $scope.alertMessage = ('Event Resized to make dayDelta ' + delta);
    };
    /* add and removes an event source of choice */
    $scope.addRemoveEventSource = function (sources, source) {
        var canAdd = 0;
        angular.forEach(sources, function (value, key) {
            if (sources[key] === source) {
                sources.splice(key, 1);
                canAdd = 1;
            }
        });
        if (canAdd === 0) {
            sources.push(source);
        }
    };
    /* add custom event*/
    $scope.addEvent = function () {
        $scope.events.push({
            title: 'Open Sesame',
            start: new Date(y, m, 28),
            end: new Date(y, m, 29),
            className: ['openSesame']
        });
    };
    /* remove event */
    $scope.remove = function (index) {
        $scope.events.splice(index, 1);
    };
    // Change View 
    $scope.changeView = function (view, calendar) {
        uiCalendarConfig.calendars['myCalendar2'].fullCalendar('changeView', view);
    };
    /* Change View */
    $scope.renderCalendar = function (calendar) {      
        $timeout(function () {
            if (uiCalendarConfig.calendars[calendar]) {
                uiCalendarConfig.calendars[calendar].fullCalendar('render');
            }
        });
    };
    /* Render Tooltip */
    $scope.eventRender = function (event, element, view) {
        element.attr({
            'tooltip': event.title,
            'tooltip-append-to-body': true
        });
        $compile(element)($scope);
    };
    /* config object */
    $scope.uiConfig = {
        calendar: {
            events: $scope.events,
            stick:true ,
            height: 450,
            editable: true,
            header: {
                left: 'title',
                center: '',
                right: 'today prev,next'
            },
            eventClick: $scope.alertOnEventClick,
            eventDrop: $scope.alertOnDrop,
            eventResize: $scope.alertOnResize,
            eventRender: $scope.eventRender
        }
    };

    $scope.changeLang = function () {
        if ($scope.changeTo === 'Hungarian') {
            $scope.uiConfig.calendar.dayNames = ["Vasárnap", "Hétfő", "Kedd", "Szerda", "Csütörtök", "Péntek", "Szombat"];
            $scope.uiConfig.calendar.dayNamesShort = ["Vas", "Hét", "Kedd", "Sze", "Csüt", "Pén", "Szo"];
            $scope.changeTo = 'English';
        } else {
            $scope.uiConfig.calendar.dayNames = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
            $scope.uiConfig.calendar.dayNamesShort = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
            $scope.changeTo = 'Hungarian';
        }
    };
    ///* event sources array*/
    //$scope.eventSources = [$scope.events];
    //$scope.eventSources2 = [$scope.calEventsExt, $scope.eventsF, $scope.events];


    //--------------------------------End Calenar---------------------------------------

    $scope.GoToDashboard = function () {
        $location.url("AdjusterDashboard");
    };
    $scope.Back = function () {
        $location.url("AdjusterPropertyClaimDetails");
    }
});